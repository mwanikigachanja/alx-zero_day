# Guide: Finding the Password in the Bit Manipulation Project (C)

In this guide, we will walk you through the process of finding and saving the password in the file `101-password` within your Bit Manipulation project in C. It's essential to ensure that the password is saved exactly as required, with no new lines or extra spaces.

## Prerequisites

Before you begin, make sure you have the following:

1. **Bit Manipulation Project in C:** You should have access to the C project where the password is hidden or needs to be calculated.

## Steps to Find and Save the Password

Follow these steps to find and save the password:

### 1. Locate the Password

Identify the portion of your C code or the specific function where the password is hidden or needs to be calculated. The password might be encoded or stored in a variable, or it may require some manipulation to reveal it.

### 2. Implement the Password Retrieval Logic

Write the necessary code within your project to retrieve the password. This may involve decoding, calculations, or extracting the password from a data source within your project. Ensure that the retrieved password is stored in a variable.

Here is an example of how the code might look:

```c
#include <stdio.h>

int main() {
    // Your code to retrieve the password goes here
    char password[] = "YourPassword";  // Replace with your logic to obtain the password
    
    // Open the file for writing
    FILE *file = fopen("101-password", "w");
    
    if (file != NULL) {
        // Write the password to the file
        fprintf(file, "%s", password);
        
        // Close the file
        fclose(file);
    } else {
        printf("Error: Unable to open the file for writing.\n");
    }
    
    return 0;
}
```

Make sure to replace `"YourPassword"` with your actual password retrieval logic.

### 3. Save the Password to `101-password`

Open a file named `101-password` for writing. Use the `fopen()` function to create or open the file. If the file exists, its contents will be overwritten.

### 4. Write the Password to the File

Use the `fprintf()` function to write the password to the file. Ensure that you specify the correct file pointer and format. In our example code, we used `fprintf(file, "%s", password)` to write the password as a string.

### 5. Close the File

After writing the password to the file, close the file using the `fclose()` function to ensure that the changes are saved.

### 6. Test the Code

Run your program to execute the password retrieval logic and save the password to `101-password`. Verify that the password is correctly saved in the file without any extra spaces or new lines.

## Conclusion

By following these steps, you can find and save the password in the file `101-password` within your Bit Manipulation project in C. Ensure that your code accurately retrieves the password and that the file contains the exact password as required by the project specifications.
